library(corrplot)
corrplot(correlation)
correlation
correlation <- cor(titanic_data$Age, titanic_data$Fare)
corrplot(correlation)
cor(titanic_data$Age, titanic_data$Fare)
?subset
sub_titanic <- subset(titanic_data, select = c(Age, Fare))
head(sub_titanic)
correlation <- cor(sub_titanic)
corrplot(correlation)
corrplot(correlation, method = "number")
pairs(sub_titanic)
library(ggplot2)
head(titanic_data)
ggplot(titanic_data, aes(x = Fare)) + geom_histogram()
ggplot(titanic_data, aes(x = Fare)) + geom_histogram(binwidth = 1)
ggplot(titanic_data, aes(x = Fare)) + geom_histogram(binwidth = 60)
?geom_histogram
ggplot(titanic_data, aes(x = Fare)) + geom_histogram(bins = 100)
ggplot(titanic_data, aes(x = Fare)) + geom_histogram(bins = 50)
ggplot(titanic_data, aes(x = Fare)) + geom_histogram(bins = 10)
ggplot(titanic_data, aes(x = Fare)) + geom_histogram(bins = 30)
ggplot(titanic_data, aes(x = Fare)) + geom_histogram()
ggplot(titanic_data, aes(x = Fare)) + geom_histogram() + scale_x_log10()
ggplot(titanic_data, aes(x = Fare)) + geom_histogram(col(fare))
ggplot(titanic_data, aes(x = Fare)) + geom_histogram(col(titanic_data$fare))
ggplot(titanic_data, aes(x = Fare)) + geom_histogram(col = titanic_data$fare)
ggplot(titanic_data, aes(x = Fare)) + geom_histogram(colour = titanic_data$fare)
ggplot(titanic_data, aes(x = Fare)) + geom_histogram()
ggplot(titanic_data, aes(x = Fare)) + geom_histogram() + geom_density()
require(ggplot2)
require(titanic)
titanic_data = data.frame(titanic_train)
head(titanic_data)
titanic_data <- read.csv("titanic_data.csv")
colnames(titanic_data) = c('passenger_id', 'survived', 'passenger_class', 'name',
'sex', 'age', 'number_siblings_spouse', 'number_parents_children',
'ticket', 'fare', 'cabin', 'embarked')
titanic_data <- read.csv("titanic_data.csv")
colnames(titanic_data) = c('passenger_id', 'survived', 'passenger_class', 'name',
'sex', 'age', 'number_siblings_spouse', 'number_parents_children',
'ticket', 'fare', 'cabin', 'embarked')
is.factor(titanic_data$passenger_class)
as.factor(titanic_data$passenger_class)
titanic_data$passenger_class <-  as.factor(titanic_data$passenger_class)
levels(titanic_data$passenger_class) <- c("Upper", "Middle", "Lower")
class(titanic_data$passenger_class)
head(titanic_data)
str(titanic_data)
titanic_data <- read.csv("titanic_data.csv")
colnames(titanic_data) = c('passenger_id', 'survived', 'passenger_class', 'name',
'sex', 'age', 'number_siblings_spouse', 'number_parents_children',
'ticket', 'fare', 'cabin', 'embarked')
head(titanic_data)
str(titanic_data)
titanic_data$passenger_class <-  as.factor(titanic_data$passenger_class)
levels(titanic_data$passenger_class) <- c("Upper", "Middle", "Lower")
class(titanic_data$passenger_class)
summary(titanic_data)
max(titanic_data$PassengerId)
max(titanic_data$passenger_id)
nrow(titanic_data)
colnames(titanic_data)
nrow(titanic_data) # method2
titanic_data[ (titanic_data$Fare == max(titanic_data$Fare)) , ]
max(titanic_data$Fare)
max(titanic_data$fare)
titanic_data[ (titanic_data$fare == max(titanic_data$fare)) , ]
View(titanic_data[order(-titanic_data$fare),])
titanic_data[ (titanic_data$fare == max(titanic_data$fare)) , ]
titanic_data[ (titanic_data$fare == max(titanic_data$fare)) , ]
order(titanic_data$fare)
?order
order(titanic_data$fare, decreasing = T)
titanic_data[ (order(titanic_data$fare, decreasing = T)), ]
view (titanic_data[ (order(titanic_data$fare, decreasing = T)), ])
View(titanic_data[ (order(titanic_data$fare, decreasing = T)), ])
titanic_data_survived <- titanic_data[titanic_data$Survived == 1, ]
head(titanic_data_survived)
head(titanic_data)
titanic_data_survived <- titanic_data[titanic_data$survived == 1, ]
head(titanic_data_survived)
survived_m_f <- as.data.frame( titanic_data %>% group_by(sex) %>% summarise(count = n()) )
barplot(survived_m_f$count, col = c('pink', 'blue'),
ylab = ("Count"),
xlab = ("Men and Women who suvived"),
main = ("Men and Women survived in Titanic incident"),
names.arg = c("Women", "Men"))
survived_m_f
survivors_sex = aggregate(titanic_data$survived, by = list(sex = titanic_data$sex),
FUN = sum)
qplot(sex, data = survivors_sex, geom='bar', weight = x) +
ggtitle("Survivors by Sex") +
xlab("Sex") +
ylab("Survivors")
survived_m_f <- as.data.frame( titanic_data_survived %>% group_by(sex) %>% summarise(count = n()) )
survived_m_f
barplot(survived_m_f$count, col = c('pink', 'blue'),
ylab = ("Count"),
xlab = ("Men and Women who suvived"),
main = ("Men and Women survived in Titanic incident"),
names.arg = c("Women", "Men"))
ggplot(titanic_data_survived, aes(x = sex)) + geom_bar()
ggplot(titanic_data_survived, aes(x = sex)) + geom_bar(colours = c("pink", "blue"))
ggplot(titanic_data_survived, aes(x = sex), colours = c("pink", "blue")) + geom_bar()
ggplot(titanic_data_survived, aes(x = sex), colours = sex) + geom_bar()
ggplot(titanic_data_survived, aes(x = sex), col = sex) + geom_bar()
ggplot(titanic_data_survived, aes(x = sex), col = sex) + geom_bar(fill = sex)
ggplot(titanic_data_survived, aes(x = sex)) + geom_bar(fill = c('pink', 'blue'))
number_passengers_class = aggregate(titanic_data$passenger_class, by = list(passenger_class = titanic_data$passenger_class),
FUN = length)
qplot(passenger_class, data = number_passengers_class, geom='bar', weight = x) +
ggtitle("Number of Passengers by Class") +
xlab("Class") +
ylab("Number of Passengers")
Booking_Class <- as.data.frame( titanic_data %>% group_by(Pclass) %>% summarise(count=n()) )
Booking_Class$Pclass <- as.factor(Booking_Class$Pclass)
levels(Booking_Class$Pclass) <- c("Upper", "Middle", "Lower")
Booking_Class
barplot(Booking_Class$count, col = rainbow(3), names.arg = c("Upper", "Middle", "Lower"),
main = ("Passenger Data by Booking Class"),
ylab = ("Count"),
xlab = ("Socio Economic Class"))
ggplot(Booking_Class, aes(Pclass)) + geom_bar(fill = rainbow(3))
ggplot(Booking_Class, aes(Pclass)) + geom_bar()
ggplot(Booking_Class, aes(x = Pclass)) + geom_bar()
ggplot(Booking_Class, aes(x = Pclass)) + geom_bar()
Booking_Class
ggplot(Booking_Class, aes(x = Pclass, y = count) + geom_bar()
# 5. How many people had the title 'Mrs'?
head(titanic_data)
table (grepl(pattern = ".*Mrs.*", titanic_data$Name))
title_having_Mrs <- titanic_data[(grepl(pattern = ".*Mrs.*", titanic_data$Name)) , ]
count(title_having_Mrs)
# 6. What is the correlation between Age and Fare? (please provide a scatter plot)
sub_titanic <- subset(titanic_data, select = c(Age, Fare))
pairs(sub_titanic)
correlation <- cor(sub_titanic)
corrplot(correlation)
corrplot(correlation, method = "number")
# 7. What is the distribution of fares? (please provide a histogram)
head(titanic_data)
ggplot(titanic_data, aes(x = Fare)) + geom_histogram() + geom_density()
ggplot(Booking_Class, aes(x = Pclass, y = count)) + geom_bar()
ggplot(Booking_Class, aes(x = Pclass)) + geom_bar()
barplot(Booking_Class$count, col = rainbow(3), names.arg = c("Upper", "Middle", "Lower"),
main = ("Passenger Data by Booking Class"),
ylab = ("Count"),
xlab = ("Socio Economic Class"))
Booking_Class
barplot(Booking_Class$count, col = rainbow(3), names.arg = c("Upper", "Middle", "Lower"),
main = ("Passenger Data by Booking Class"),
ylab = ("Count"),
xlab = ("Socio Economic Class"),
ylim = c(0,500))
head(titanic_data)
table (grepl(pattern = ".*Mrs.*", titanic_data$Name))
table (grepl(pattern = ".*Mrs.*", titanic_data$name))
title_having_Mrs <- titanic_data[(grepl(pattern = ".*Mrs.*", titanic_data$name)) , ]
count(title_having_Mrs)
count(table(title_having_Mrs))
count(title_having_Mrs)
nrow(title_having_Mrs)
nrow(
titanic_data[grepl('Mrs', titanic_data$name),]
)
table (grepl(pattern = ".*Mrs.*", titanic_data$name))
title_having_Mrs <- titanic_data[(grepl(pattern = ".*Mrs.*", titanic_data$name)) , ]
nrow(title_having_Mrs)
cor(titanic_data$age, titanic_data$fare, use = 'complete.obs')
cor(titanic_data$age, titanic_data$fare)
cor(titanic_data$age, titanic_data$fare, use = 'complete.obs')
?cor
is.na(titanic_data$age)
table(is.na(titanic_data$age))
table(is.na(titanic_data$fare))
cor(titanic_data$age, titanic_data$fare, use = 'complete.obs')
corrplot(correlation)
correlation <- cor(titanic_data$age, titanic_data$fare, use = 'complete.obs')
corrplot(correlation)
sub_titanic <- subset(titanic_data, select = c(age, fare))
pairs(sub_titanic)
correlation <- cor(sub_titanic, use = 'complete.obs')
corrplot(correlation)
corrplot(correlation, method = "number")
correlation
sub_titanic <- subset(titanic_data, select = c(age, fare))
pairs(sub_titanic)
correlation <- cor(sub_titanic, use = 'complete.obs')
correlation
corrplot(correlation)
corrplot(correlation, method = "number")
qplot(age, fare, data = titanic_data) +
ggtitle("Correlation Between Age and Fare") +
xlab("Age") +
ylab("Fare")
plot (sub_titanic)
?plot
plot (sub_titanic, type = p)
plot (sub_titanic, type = "p")
plot (sub_titanic, type = "b")
plot (sub_titanic, type = "p")
plot (sub_titanic, type = "h")
plot (sub_titanic, type = "p")
plot (sub_titanic, type = "p", main = "Correlation Between Age and Fare")
plot (sub_titanic, type = "p", main = "Correlation Between Age and Fare",
col = "dark red")
plot (sub_titanic, type = "p", main = "Correlation Between Age and Fare",
col = "red")
plot (sub_titanic, type = "p", main = "Correlation Between Age and Fare",
col = "Blue")
plot (sub_titanic, type = "p", main = "Correlation Between Age and Fare",
col = "dark Blue")
qplot(age, fare, data = titanic_data) +
ggtitle("Correlation Between Age and Fare") +
xlab("Age") +
ylab("Fare")
qplot(age, fare, data = sub_titanic) +
ggtitle("Correlation Between Age and Fare") +
xlab("Age") +
ylab("Fare")
qplot(fare, data = titanic_data, geom = 'histogram',
binwidth = 20,
xlim = c(-10,300),
fill = 'red') +
ggtitle("Fare Distribution") +
xlab("Fare") +
ylab("Number of Passengers")
head(titanic_data)
ggplot(titanic_data, aes(x = Fare)) + geom_histogram() + geom_density()
ggplot(titanic_data, aes(x = fare)) + geom_histogram()
ggplot(titanic_data, aes(x = fare)) + geom_histogram(binwidth = 20)
ggplot(titanic_data, aes(x = fare)) + geom_histogram(binwidth = 20, xlim = c(-10, 300))
ggplot(titanic_data, aes(x = fare)) + geom_histogram(binwidth = 20)  +
ggtitle("Fare Distribution")
ggplot(titanic_data, aes(x = fare)) + geom_histogram(binwidth = 20, fill = 'red')  +
ggtitle("Fare Distribution")
ggplot(titanic_data, aes(x = fare)) + geom_histogram(binwidth = 20, fill = 'red')  +
ggtitle("Fare Distribution") + ylab("Number of Passengers")
clr
getwd()
setwd("~/Desktop/Study Docs/SuperDataScienceProjects/Wiki Project")
getwd()
getwd()
titanic_data <- read.csv("wikipedia_data.csv")
Wiki_data <- read.csv("wikipedia_data.csv")
Wiki_data <- fread("wikipedia_data.csv")
?fread
??fread
install.packages("scales")
install.packages("scales")
install.packages("scales")
library(scales)
library(data.table)
install.packages("data.table")
library(data.table)
Wiki_data <- fread("wikipedia_data.csv", header = T)
head(Wiki_data)
str(Wiki_data)
as.factor(Wiki_data$source)
wiki_full_data <- fread("wikipedia_data_full.csv", header = T)
as.factor(wiki_full_data$source)
as.factor(wiki_full_data$source)
head(wiki_full_data)
wiki_full_data <- fread("wikipedia_data_full.csv", header = T)
head(wiki_full_data)
as.factor(wiki_full_data$source)
names(wiki_full_data)
names(wiki_full_data) <- c("source", "page_name", "views", "size")
str(wiki_full_data)
data$page_name = as.character(data$page_name)
data$source = as.character(data$source)
wiki_full_data <- unique(wiki_full_data)
wiki_full_data <- fread("wikipedia_data_full.csv", header = T)
head(wiki_full_data)
names(wiki_full_data) <- c("source", "page_name", "views", "size")
data$page_name = as.character(data$page_name)
data$source = as.character(data$source)
wiki_unique <- unique(wiki_full_data)
wiki_unique <- wiki_unique[!(is.na( wiki_unique$views)) ,]
head(wiki_unique)
?gsub
rm(wiki_unique)
rm(Wiki_data)
wiki_clean <- unique(wiki_full_data)
wiki_clean <- wiki_clean[!(is.na( wiki_clean$views)) ,]
head(wiki_clean)
head(wiki_clean)
wiki_clean$language <- gsub(".*_", "", wiki_clean$source)
head(wiki_clean)
wiki_clean$language <- gsub("_.+", "", wiki_clean$source)
head(wiki_clean)
str(wiki_clean)
View(wiki_clean)
View(wiki_clean)
table(grepl("_.+", wiki_clean$source))
tail(wiki_clean)
head(wiki_clean)
wiki_clean %>% group_by(language) %>% summarise(count = n())
library(dplyr)
wiki_clean %>% group_by(language) %>% summarise(count = n())
order()
?order
wiki_clean %>% group_by(language) %>% summarise(count = n()) %>% order(count,decreasing = T )
wiki_clean %>% group_by(language) %>% summarise(count = n()) %>%as.data.frame() %>% order(count,decreasing = T)
wiki_clean %>% group_by(language) %>% summarise(count = n()) %>% as.data.frame()
wiki_clean %>% group_by(language) %>% summarise(count = n()) %>% as.data.frame() %>%
order(count, decreasing = T)
a <- wiki_clean %>% group_by(language) %>% summarise(count = n()) %>% as.data.frame() %>%
a <- wiki_clean %>% group_by(language) %>% summarise(count = n()) %>% as.data.frame()
a <- wiki_clean %>% group_by(language) %>% summarise(count = n()) %>% as.data.frame()
a
a <- order(a$count, decreasing = T)
a
a <- a[order(a$count, decreasing = T)]
a <- a[order(a$count, decreasing = T),]
a[order(a$count, decreasing = T),]
a[(order(a$count, decreasing = T)),]
a <- wiki_clean %>% group_by(language) %>% summarise(count = n()) %>% as.data.frame()
a[(order(a$count, decreasing = T)),]
wiki_top_language <- wiki_clean %>% group_by(language) %>% summarise(count = n()) %>% as.data.frame()
wiki_top_language <- wiki_top_language[(order(wiki_top_language$count, decreasing = T)),]
wiki_top_language
head(wiki_top_language)
head(wiki_top_language, 10)
wiki_top_language <- head(wiki_top_language, 10)
ggplot(wiki_top_language, aes(x = language, y = count)) + geom_histogram()
library(corrplot)
library(ggplot2)
library(data.table)
ggplot(wiki_top_language, aes(x = language, y = count)) + geom_histogram()
ggplot(wiki_top_language, aes(x = language)) + geom_histogram()
ggplot(wiki_top_language, aes(x = language)) + geom_bar()
barplot(wiki_top_language$count)
wiki_top_language %>% ggplot(aes(x = factor(language))) + geom_bar()
wiki_top_language
barplot(wiki_top_language$count)
barplot(wiki_top_language$count, ylim = c(0, 45000))
barplot(wiki_top_language$count, ylim = c(0, 45000))
barplot(wiki_top_language$count, col = rainbow(8), ylim = c(0, 45000))
barplot(wiki_top_language$count, col = rainbow(8), ylim = c(0, 45000))
class(wiki_top_language)
language
wiki_top_language %>% ggplot(aes(x = language))
wiki_top_language %>% ggplot(aes(x = language)) + geom_bar()
qplot(language, data = wiki_top_language, geom = 'bar', weight = views,
fill = 'red') +
ggtitle("Views by language") +
xlab("Language") +
ylab("Number of Views")
qplot(language, data = wiki_top_language, geom = 'bar', weight = count,
fill = 'red') +
ggtitle("Views by language") +
xlab("Language") +
ylab("Number of Views")
wiki_top_language %>% ggplot() + geom_bar()
wiki_top_language %>% ggplot(aes(x =language )) + geom_bar()
ggplot(aes(x = wiki_top_language$language )) + geom_bar()
?ggplot
ggplot(data = wiki_top_language, aes(x = wiki_top_language$language )) + geom_bar()
ggplot(data = wiki_top_language, aes(x = wiki_top_language$language )) + geom_bar() +
scale_y_continuous(limits = c(0,45000))
head(wiki_top_language)
str(wiki_top_language)
wiki_top_language$language <- as.factor(wiki_top_language$language)
ggplot(data = wiki_top_language, aes(x = wiki_top_language$language )) + geom_bar() +
scale_y_continuous(limits = c(0,45000))
ggplot(data = wiki_top_language, aes(x = wiki_top_language$language )) + geom_bar()
qplot(language, data = wiki_top_language, geom = 'bar', weight = count,
fill = 'red') +
ggtitle("Views by language") +
xlab("Language") +
ylab("Number of Views")
qplot(language, data = wiki_top_language, geom = 'bar',
fill = 'red') +
ggtitle("Views by language") +
xlab("Language") +
ylab("Number of Views")
?geom_bar
ggplot(data = wiki_top_language, aes(x = wiki_top_language$language )) + geom_bar(weight = count) +
scale_y_continuous(limits = c(0,45000))
ggplot(data = wiki_top_language, aes(x = wiki_top_language$language )) + geom_col() +
scale_y_continuous(limits = c(0,45000))
ggplot(data = wiki_top_language, aes(x = wiki_top_language$language )) + geom_bar(aes(weight = count)) +
scale_y_continuous(limits = c(0,45000))
ggplot(data = wiki_top_language, aes(x = wiki_top_language$language )) +
geom_bar(aes(weight = count))
ggplot(data = wiki_top_language, aes(x = wiki_top_language$language )) +
geom_bar(aes(weight = count)) + ggtitle("Views by language") +
xlab("Language") +
ylab("Number of Views")
ggplot(data = wiki_top_language, aes(x = wiki_top_language$language, fill = language)) +
geom_bar(aes(weight = count)) + ggtitle("Views by language") +
xlab("Language") +
ylab("Number of Views")
head(wiki_clean)
wiki_top_language
table(data$page_name!='Main_Page')
table(wiki_clean$page_name!='Main_Page')
wiki_excl_main <- wiki_clean[!(wiki_clean$page_name!='Main_Page'), ]
wiki_excl_main
wiki_clean = wiki_clean[order(wiki_clean$size, decreasing = TRUE),]
head(wiki_clean)
wiki_large_page <- head(wiki_clean, 10)
ggplot(data = wiki_large_page, aes(x = wiki_large_page$source)) +
geom_bar(aes(weight = count)) + ggtitle("Views by language") +
xlab("Language") +
ylab("Number of Views")
wiki_large_page <- head(wiki_clean, 10)
ggplot(data = wiki_large_page, aes(x = wiki_large_page$source)) +
geom_bar(aes(weight = size)) + ggtitle("Views by language") +
xlab("Language") +
ylab("Number of Views")
class(wiki_large_page)
wiki_large_page
ggplot(data = wiki_large_page, aes(x = wiki_large_page$page_name)) +
geom_bar(aes(weight = size)) + ggtitle("Views by language") +
xlab("Language") +
ylab("Number of Views")
qplot(page_name, data = wiki_large_page, geom = 'bar', weight = size,
fill = 'red') +
ggtitle("Largest pages") +
xlab("Page Name") +
ylab("Size")
setwd("~/Desktop/Study Docs/SuperDataScienceProjects/CrimePrediction")
getwd()
crime_data <- fread("data", header = T)
crime_data <- fread("data.csv", header = T)
library(dplyr)
library(corrplot)
library(ggplot2)
library(data.table)
crime_data <- read.csv("data.csv", header = T)
str(crime_data)
library(dplyr)
library(corrplot)
library(ggplot2)
library(data.table)
getwd()
crime_data <- read.csv("data.csv", header = T)
str(crime_data)
variable_name <- read.csv("variable.names.csv")
variable_name <- read.csv("variable_names.csv")
names(variable.names())
names(variable_name)
head(variable_name)
head(variable_name)
view(variable_name)
View(crime_data)
View(variable_name)
crime_data <- read.csv("data.csv", header = F)
View(crime_data)
variable_name <- read.csv("variable_names.csv", header = F)
View(variable_name)
View(variable_name)
variable_name$clean <- substr(variable_name$V1, 4, 1000)
head(variable_name)
variable_name$clean <- gsub(patteren = ":.+", "", data = variable_name$clean)
?gsub
variable_name$clean <- gsub(pattern = ":.+", "", x = variable_name$clean)
View(variable_name)
str(crime_data)
names(crime_data) <- variable_name$clean
View(crime_data)
crime_small_data <- select(crime_data, c('ViolentCrimesPerPop', 'pctUrban', 'agePct16t24', 'PctUnemployed', 'medIncome'))
crime_small_data <- select(crime_data, c("ViolentCrimesPerPop", "pctUrban", "agePct16t24", "PctUnemployed", "medIncome"))
?select
crime_small_data <- select(crime_data, "ViolentCrimesPerPop", "pctUrban", "agePct16t24", "PctUnemployed", "medIncome")
crime_small_data <- select(crime_data, ViolentCrimesPerPop, pctUrban)
crime_small_data <- select(crime_data, ViolentCrimesPerPop, pctUrban, agePct16t24, PctUnemployed, medIncome)
View(crime_small_data)
str(crime_small_data)
cor(crime_small_data$medIncome, crime_small_data$PctUnemployed)
correlation <- cor(crime_small_data$medIncome, crime_small_data$PctUnemployed)
plot(crime_small_data$medIncome, crime_small_data$PctUnemployed)
corr_full <- cor(crime_small_data)
corr_full
corrplot(corr_full)
corrplot(correlation)
correlation <- cor(crime_small_data$medIncome, crime_small_data$PctUnemployed)
plot(crime_small_data$medIncome, crime_small_data$PctUnemployed)
corrplot(correlation)
corr_full <- cor(crime_small_data)
corr_full
corrplot(corr_full)
corrplot(corr_full, method = number)
corrplot(corr_full, method = "number")
set.seed(222)
??sample.split
library(caTools)
split_data <- sample.split(crime_small_data$ViolentCrimesPerPop, SplitRatio = 0.8)
head(split_data)
train_data <- crime_small_data[split_data, ]
test_data <- crime_small_data[!(split_data), ]
model = lm(formula = ViolentCrimesPerPop ~ agePct16t24 + PctUnemployed + pctUrban,
data = train_data)
summary(model)
model = lm(formula = ViolentCrimesPerPop ~ PctUnemployed + pctUrban,
data = train_data)
summary(model)
model = lm(formula = ViolentCrimesPerPop ~ agePct16t24 + PctUnemployed + pctUrban,
data = train_data)
summary(model)
predict_test_data <- predict(model, newdata = test)
predict_test_data <- predict(model, newdata = test_data)
predict_test_data
SSE = sum((prediction_testing_data - testing_data$ViolentCrimesPerPop)^2)
SSE = sum((predict_test_data - test_data$ViolentCrimesPerPop)^2)
SST = sum((mean(test_data$ViolentCrimesPerPop) - test_data$ViolentCrimesPerPop)^2)
R2 = 1 - SSE/SST
R2
